{"version":3,"sources":["constants/productConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","_ref","history","keyword","setKeyword","useState","React","createElement","Form","onSubmit","e","preventDefault","trim","push","concat","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","async","getState","config","headers","Authorization","token","data","axios","get","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","aria-controls","Collapse","Route","render","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","Fragment","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","addToCartHandler","disabled","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","checkoutHandler","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","placeOrderHandler","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","clientId","script","onload","body","appendChild","addPayPalScript","PayPalButton","amount","onSuccess","paymentResult","console","log","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","App","Router","path","component","exact","Boolean","hostname","ReactDOM","Provider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2dfeaed3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ApniKitaab</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; ApniKitaab</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>₹{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} ( ₹{product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To ApniKitaab',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ₹{product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>₹{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}> ₹{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              ₹\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Buy\n              </Button>\n\n\n\n\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Rent\n              </Button>\n\n\n\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>₹{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>₹{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>₹{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>₹{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>₹{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>₹{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>₹{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>₹{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>₹{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Author</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>₹{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}